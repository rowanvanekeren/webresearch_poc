{"version":3,"sources":["annyang.min.js","commands.js","speechreq.js"],"names":[],"mappingszfile":"main.js","sourcesContent":["\"use strict\";\nvar _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (a) {\n    return typeof a\n} : function (a) {\n    return a && \"function\" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? \"symbol\" : typeof a\n};\n//! annyang\n//! version : 2.6.0\n//! author  : Tal Ater @TalAter\n//! license : MIT\n//! https://www.TalAter.com/annyang/\n!function (a, b) {\n    \"function\" == typeof define && define.amd ? define([], function () {\n        return a.annyang = b(a)\n    }) : \"object\" === (\"undefined\" == typeof module ? \"undefined\" : _typeof(module)) && module.exports ? module.exports = b(a) : a.annyang = b(a)\n}(\"undefined\" != typeof window ? window : void 0, function (a, b) {\n    var c, d = a.SpeechRecognition || a.webkitSpeechRecognition || a.mozSpeechRecognition || a.msSpeechRecognition || a.oSpeechRecognition;\n    if (!d)return null;\n    var e, f, g = [], h = {\n        start: [],\n        error: [],\n        end: [],\n        soundstart: [],\n        result: [],\n        resultMatch: [],\n        resultNoMatch: [],\n        errorNetwork: [],\n        errorPermissionBlocked: [],\n        errorPermissionDenied: []\n    }, i = 0, j = 0, k = !1, l = \"font-weight: bold; color: #00f;\", m = !1, n = !1, o = /\\s*\\((.*?)\\)\\s*/g, p = /(\\(\\?:[^)]+\\))\\?/g, q = /(\\(\\?)?:\\w+/g, r = /\\*\\w+/g, s = /[\\-{}\\[\\]+?.,\\\\\\^$|#]/g, t = function (a) {\n        return a = a.replace(s, \"\\\\$&\").replace(o, \"(?:$1)?\").replace(q, function (a, b) {\n            return b ? a : \"([^\\\\s]+)\"\n        }).replace(r, \"(.*?)\").replace(p, \"\\\\s*$1?\\\\s*\"), new RegExp(\"^\" + a + \"$\", \"i\")\n    }, u = function (a) {\n        for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)c[d - 1] = arguments[d];\n        a.forEach(function (a) {\n            a.callback.apply(a.context, c)\n        })\n    }, v = function () {\n        return e !== b\n    }, w = function (a, b) {\n        a.indexOf(\"%c\") !== -1 || b ? console.log(a, b || l) : console.log(a)\n    }, x = function () {\n        v() || c.init({}, !1)\n    }, y = function (a, b, c) {\n        g.push({command: a, callback: b, originalPhrase: c}), k && w(\"Command successfully loaded: %c\" + c, l)\n    }, z = function (a) {\n        u(h.result, a);\n        for (var b, c = 0; c < a.length; c++) {\n            b = a[c].trim(), k && w(\"Speech recognized: %c\" + b, l);\n            for (var d = 0, e = g.length; d < e; d++) {\n                var f = g[d], i = f.command.exec(b);\n                if (i) {\n                    var j = i.slice(1);\n                    return k && (w(\"command matched: %c\" + f.originalPhrase, l), j.length && w(\"with parameters\", j)), f.callback.apply(this, j), void u(h.resultMatch, b, f.originalPhrase, a)\n                }\n            }\n        }\n        u(h.resultNoMatch, a)\n    };\n    return c = {\n        init: function (l) {\n            var o = !(arguments.length > 1 && arguments[1] !== b) || arguments[1];\n            e && e.abort && e.abort(), e = new d, e.maxAlternatives = 5, e.continuous = \"http:\" === a.location.protocol, e.lang = \"en-US\", e.onstart = function () {\n                n = !0, u(h.start)\n            }, e.onsoundstart = function () {\n                u(h.soundstart)\n            }, e.onerror = function (a) {\n                switch (u(h.error, a), a.error) {\n                    case\"network\":\n                        u(h.errorNetwork, a);\n                        break;\n                    case\"not-allowed\":\n                    case\"service-not-allowed\":\n                        f = !1, (new Date).getTime() - i < 200 ? u(h.errorPermissionBlocked, a) : u(h.errorPermissionDenied, a)\n                }\n            }, e.onend = function () {\n                if (n = !1, u(h.end), f) {\n                    var a = (new Date).getTime() - i;\n                    j += 1, j % 10 === 0 && k && w(\"Speech Recognition is repeatedly stopping and starting. See http://is.gd/annyang_restarts for tips.\"), a < 1e3 ? setTimeout(function () {\n                        c.start({paused: m})\n                    }, 1e3 - a) : c.start({paused: m})\n                }\n            }, e.onresult = function (a) {\n                if (m)return k && w(\"Speech heard, but annyang is paused\"), !1;\n                for (var b = a.results[a.resultIndex], c = [], d = 0; d < b.length; d++)c[d] = b[d].transcript;\n                z(c)\n            }, o && (g = []), l.length && this.addCommands(l)\n        }, start: function (a) {\n            x(), a = a || {}, m = a.paused !== b && !!a.paused, f = a.autoRestart === b || !!a.autoRestart, a.continuous !== b && (e.continuous = !!a.continuous), i = (new Date).getTime();\n            try {\n                e.start()\n            } catch (a) {\n                k && w(a.message)\n            }\n        }, abort: function () {\n            f = !1, j = 0, v() && e.abort()\n        }, pause: function () {\n            m = !0\n        }, resume: function () {\n            c.start()\n        }, debug: function () {\n            var a = !(arguments.length > 0 && arguments[0] !== b) || arguments[0];\n            k = !!a\n        }, setLanguage: function (a) {\n            x(), e.lang = a\n        }, addCommands: function (b) {\n            var c;\n            x();\n            for (var d in b)if (b.hasOwnProperty(d))if (c = a[b[d]] || b[d], \"function\" == typeof c)y(t(d), c, d); else {\n                if (!(\"object\" === (\"undefined\" == typeof c ? \"undefined\" : _typeof(c)) && c.regexp instanceof RegExp)) {\n                    k && w(\"Can not register command: %c\" + d, l);\n                    continue\n                }\n                y(new RegExp(c.regexp.source, \"i\"), c.callback, d)\n            }\n        }, removeCommands: function (a) {\n            a === b ? g = [] : (a = Array.isArray(a) ? a : [a], g = g.filter(function (b) {\n                for (var c = 0; c < a.length; c++)if (a[c] === b.originalPhrase)return !1;\n                return !0\n            }))\n        }, addCallback: function (c, d, e) {\n            var f = a[d] || d;\n            \"function\" == typeof f && h[c] !== b && h[c].push({callback: f, context: e || this})\n        }, removeCallback: function (a, c) {\n            var d = function (a) {\n                return a.callback !== c\n            };\n            for (var e in h)h.hasOwnProperty(e) && (a !== b && a !== e || (c === b ? h[e] = [] : h[e] = h[e].filter(d)))\n        }, isListening: function () {\n            return n && !m\n        }, getSpeechRecognizer: function () {\n            return e\n        }, trigger: function (a) {\n            return c.isListening() ? (Array.isArray(a) || (a = [a]), void z(a)) : void(k && w(n ? \"Speech heard, but annyang is paused\" : \"Cannot trigger while annyang is aborted\"))\n        }\n    }\n});","","var resultClass = \".results-top h1\";\r\nvar contactOneID = \"#dot-1\";\r\nvar contactTwoID = \"#dot-2\";\r\nvar contactThreeID = \"#dot-3\";\r\nvar terminalID = \"#terminal\";\r\nvar userSaidGlobal = \"none\";\r\nvar terminalOn = function () {\r\n    $(terminalID).removeClass('terminal-off');\r\n    $(terminalID).addClass('terminal-on');\r\n};\r\nvar terminalOff = function () {\r\n    $(terminalID).removeClass('terminal-on');\r\n    $(terminalID).addClass('terminal-off');\r\n};\r\n$('.contacts').keypress(function (e) {\r\n    if (e.which == 13) {\r\n\r\n        if ($(this).hasClass('contacts-1')) {\r\n            addDynamicCommand($(this).val(),1);\r\n        } else if ($(this).hasClass('contacts-2')) {\r\n            addDynamicCommand($(this).val(),2);\r\n        } else if ($(this).hasClass('contacts-3')) {\r\n            addDynamicCommand($(this).val(),3);\r\n        }\r\n        /*addDynamicCommand($(this).val());*/\r\n    }\r\n});\r\nfunction addDynamicCommand(value, pin) {\r\n    var pinNumber = pin;\r\n    var object = {};\r\n    var firstPart = \"(zet) (set) (do) (doe) \";\r\n    var nameOfContact = value;\r\n    var lastPartOn = \" aan\";\r\n    var lastPartOff = \" uit\";\r\n    var timerPart1 = \" (om) (vanaf) :hour uur (en) :minutes (minuten) (*trash)\";\r\n    var timerPart2 = \" om :time (*trash)\";\r\n    var timerPart3 = \" vanaf :time (*trash)\";\r\n    /*    var contactsOneOn = \"contactsOneOn\";\r\n     var contactsTwoOn = \"contactsTwoOn\";\r\n     var contactsThreeOn = \"contactsThreeOn\";\r\n     var contactsOneOff = \"contactsOneOff\";\r\n     var contactsTwoOff = \"contactsTwoOff\";\r\n     var contactsThreeOff = \"contactsThreeOff\";\r\n     var timerOnHMOne = \"timerOnHMOne\";\r\n     var timerOnHMTwo = \"timerOnHMTwo\";\r\n     var timerOnHMThree = \"timerOffHMThree\";\r\n     var timerOffHMOne = \"timerOffHMTwo\";\r\n     var timerOffHMTwo = \"timerOffHMOne\";\r\n     var timerOffHMThree = \"timerOffHMThree\";\r\n     var timerOnFullTimeOne = \"timerOnFullTimeOne\";\r\n     var timerOnFullTimeTwo = \"timerOnFullTimeTwo\";\r\n     var timerOnFullTimeThree = \"timerOnFullTimeThree\";\r\n     var timerOffFullTimeOne = \"timerOffFullTimeOne\";\r\n     var timerOffFullTimeTwo = \"timerOffFullTimeTwo\";\r\n     var timerOffFullTimeThree = \"timerOffFullTimeThree\";*/\r\n\r\n    /*   if (pinNumber == 1) {*/\r\n    object[firstPart + nameOfContact + lastPartOn] = function () {\r\n        console.log('toglle contact on', pinNumber);\r\n        toggleContact(pinNumber, 'on');\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOff] = function () {\r\n        toggleContact(pinNumber, 'off');\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOn + timerPart1] = function (hours, minutes) {\r\n        timerHourMinutes(nameOfContact, hours, minutes, 'on', pinNumber);\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOff + timerPart1] = function (hours, minutes) {\r\n        timerHourMinutes(nameOfContact, hours, minutes, 'off', pinNumber);\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOn + timerPart2] = function (time, trash) {\r\n        timerFullTime(nameOfContact, time, 'on', pinNumber);\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOff + timerPart2] = function (time, trash) {\r\n        timerFullTime(nameOfContact, time, 'off', pinNumber);\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOn + timerPart3] = function (time, trash) {\r\n        timerFullTime(nameOfContact, time, 'on', pinNumber);\r\n    };\r\n    object[firstPart + nameOfContact + lastPartOff + timerPart3] = function (time, trash) {\r\n        timerFullTime(nameOfContact, time, 'off', pinNumber);\r\n    };\r\n    annyang.addCommands(object);\r\n    /*    } else if (pinNumber == 2) {\r\n     object[firstPart + variable + lastPartOn] = contactsTwoOn;\r\n     object[firstPart + variable + lastPartOff] = contactsTwoOff;\r\n     object[firstPart + variable + lastPartOn + timerPart1] = timerOnHMTwo;\r\n     object[firstPart + variable + lastPartOff + timerPart1] = timerOffHMTwo;\r\n     object[firstPart + variable + lastPartOn + timerPart2] = timerOnFullTimeTwo;\r\n     object[firstPart + variable + lastPartOff + timerPart2] = timerOffFullTimeTwo;\r\n     object[firstPart + variable + lastPartOn + timerPart3] = timerOnFullTimeTwo;\r\n     object[firstPart + variable + lastPartOff + timerPart3] = timerOffFullTimeTwo;\r\n     annyang.addCommands(object);\r\n     } else if (pinNumber == 3) {\r\n     object[firstPart + variable + lastPartOn] = contactsThreeOn;\r\n     object[firstPart + variable + lastPartOff] = contactsThreeOff;\r\n     object[firstPart + variable + lastPartOn + timerPart1] = timerOnHMThree;\r\n     object[firstPart + variable + lastPartOff + timerPart1] = timerOffHMThree;\r\n     object[firstPart + variable + lastPartOn + timerPart2] = timerOnFullTimeThree;\r\n     object[firstPart + variable + lastPartOff + timerPart2] = timerOffFullTimeThree;\r\n     object[firstPart + variable + lastPartOn + timerPart3] = timerOnFullTimeThree;\r\n     object[firstPart + variable + lastPartOff + timerPart3] = timerOffFullTimeThree;\r\n     annyang.addCommands(object);\r\n     }*/\r\n\r\n}\r\nfunction pushCommand(pin, state) {\r\n    $.ajax({\r\n        url: \"pushCommand\",\r\n        type: \"post\",\r\n        headers: {\r\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n        },\r\n        data: {\r\n            pin: pin,\r\n            state: state\r\n        },\r\n        success: function (response) {\r\n            // you will get response from your php page (what you echo or print)\r\n\r\n        },\r\n        error: function (jqXHR, textStatus, errorThrown) {\r\n            console.log(textStatus, errorThrown);\r\n        }\r\n\r\n\r\n    });\r\n}\r\nfunction allDotsOff() {\r\n    $(contactOneID).removeClass('green');\r\n    $(contactOneID).addClass('red');\r\n    $(contactTwoID).removeClass('green');\r\n    $(contactTwoID).addClass('red');\r\n    $(contactThreeID).removeClass('green');\r\n    $(contactThreeID).addClass('red');\r\n}\r\nfunction toggleDot(pin, onOrOff){\r\n    if(pin == 1){\r\n       if(onOrOff == 'on'){\r\n           $(contactOneID).removeClass('red');\r\n           $(contactOneID).addClass('green');\r\n       } else if(onOrOff == 'off'){\r\n           $(contactOneID).removeClass('green');\r\n           $(contactOneID).addClass('red');\r\n       }\r\n    }else if(pin ==2){\r\n        if(onOrOff == 'on'){\r\n            $(contactTwoID).removeClass('red');\r\n            $(contactTwoID).addClass('green');\r\n        } else if(onOrOff == 'off'){\r\n            $(contactTwoID).removeClass('green');\r\n            $(contactTwoID).addClass('red');\r\n        }\r\n    }else if(pin == 3){\r\n        if(onOrOff == 'on'){\r\n            $(contactThreeID).removeClass('red');\r\n            $(contactThreeID).addClass('green');\r\n        } else if(onOrOff == 'off'){\r\n            $(contactThreeID).removeClass('green');\r\n            $(contactThreeID).addClass('red');\r\n        }\r\n    }\r\n}\r\nfunction allDotsOn() {\r\n    $(contactOneID).removeClass('red');\r\n    $(contactOneID).addClass('green');\r\n    $(contactTwoID).removeClass('red');\r\n    $(contactTwoID).addClass('green');\r\n    $(contactThreeID).removeClass('red');\r\n    $(contactThreeID).addClass('green');\r\n}\r\nvar showSomething = function () {\r\n    $('h1').html('hier jonge nu kende wat zien');\r\n};\r\n\r\nfunction contactState(contact, state) {\r\n    console.log(\"contactstate is called\" + contact);\r\n    switch (contact) {\r\n        case 1:\r\n        case '1':\r\n        case 'een':\r\n        case '��n':\r\n        case 'aan':\r\n        function one() {\r\n            console.log('een is called' + contact + state);\r\n            pushCommand(0, state);\r\n        }\r\n\r\n            one();\r\n            break;\r\n        case 2:\r\n        case '2':\r\n        case 'twee':\r\n        function two() {\r\n            console.log('twee is called' + contact + state);\r\n            pushCommand(1, state);\r\n        }\r\n\r\n            two();\r\n            break;\r\n        case 3:\r\n        case '3':\r\n        case 'drie':\r\n        function three() {\r\n            console.log('drie is called' + contact + state);\r\n\r\n            pushCommand(2, state);\r\n        }\r\n\r\n            three();\r\n            break;\r\n\r\n    }\r\n}\r\n\r\n\r\nvar turnLightOn = function (contact) {\r\n    contactState(contact, 'on');\r\n};\r\nvar turnLightOff = function (contact) {\r\n    contactState(contact, 'off');\r\n};\r\n\r\nvar turnAllOff = function () {\r\n    pushCommand(-1, 'all_off');\r\n    allDotsOff();\r\n\r\n};\r\n\r\nvar contactsOneOn = function () {\r\n    contactState(1, 'on');\r\n};\r\nvar contactsTwoOn = function () {\r\n    contactState(2, 'on');\r\n};\r\nvar contactsThreeOn = function () {\r\n    contactState(2, 'on');\r\n};\r\n\r\nvar contactsOneOff = function () {\r\n    contactState(1, 'off');\r\n};\r\nvar contactsThreeOff = function () {\r\n    contactState(3, 'off');\r\n};\r\nvar contactsTwoOff = function () {\r\n    contactState(2, 'off');\r\n};\r\n\r\nvar turnAllOn = function () {\r\n    pushCommand(-1, 'all_on');\r\n    allDotsOn()\r\n};\r\nvar onStart = function () {\r\n    console.log('now active');\r\n};\r\n\r\n/*var timerOnHMOne = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n var timerOnHMTwo = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n var timerOnHMThree = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n\r\n var timerOffHMOne = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n var timerOffHMTwo = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n var timerOffHMThree = function (hour, minutes) {\r\n console.log(hour + \" \" + minutes);\r\n console.log('timerHM on function executed');\r\n };\r\n\r\n var timerOnFullTimeOne = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };\r\n var timerOnFullTimeTwo = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };\r\n var timerOnFullTimeThree = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };\r\n\r\n var timerOffFullTimeOne = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };\r\n var timerOffFullTimeTwo = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };\r\n var timerOffFullTimeThree = function (time, trash) {\r\n if (time.indexOf(':') > -1) {\r\n alert(\"valid time\");\r\n } else {\r\n console.log('timeformat not valid')\r\n }\r\n console.log(time);\r\n console.log('timerFullTime on function executed');\r\n };*/\r\n\r\nfunction toggleContact(pin, onOrOff) {\r\n    toggleDot(pin,onOrOff);\r\n    contactState(pin, onOrOff);\r\n}\r\nfunction timerHourMinutes(name, hour, minutes, onOrOff, pin) {\r\n    var validTimeFormat = validTimeGenerator(hour, minutes, null);\r\n    setTimerCountdown(name, validTimeFormat, onOrOff, pin);\r\n    console.log(name + hour + minutes + onOrOff, pin);\r\n\r\n};\r\nfunction timerFullTime(name, time, onOrOff, pin) {\r\n    var validTimeFormat = validTimeGenerator(null, null, time);\r\n\r\n    setTimerCountdown(name, validTimeFormat, onOrOff, pin);\r\n\r\n    console.log(name + time + onOrOff, pin);\r\n};\r\nvar test = function (test) {\r\n    console.log(\"test\" + test);\r\n};\r\nfunction validTimeGenerator(hour, minutes, time) {\r\n    var currHours = \"\";\r\n    var currMinutes = \"\";\r\n    var newTime = \"\";\r\n\r\n    if (!isNaN(hour) && !isNaN(minutes) && hour != null && minutes != null) {\r\n        currHours = hour;\r\n        currMinutes = minutes;\r\n    } else if (time != null) {\r\n        if (!isNaN(time)) {\r\n            currHours = time;\r\n            currMinutes = \"00\";\r\n        } else {\r\n            var hMFormat = time.split(\":\");\r\n            currHours = hMFormat[0];\r\n            currMinutes = hMFormat[1];\r\n        }\r\n\r\n    }\r\n\r\n    if (!isNaN(currHours) && !isNaN(currMinutes)) {\r\n        console.log(\"legit time format\");\r\n\r\n        newTime = createTimeFormat(currHours) + \":\" + createTimeFormat(currMinutes);\r\n        return newTime;\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n    function createTimeFormat(number) {\r\n        if (number < 10 && number >= 0 && number != \"00\" && number.length != 2) {\r\n            return \"0\" + number;\r\n        } else {\r\n            return number;\r\n        }\r\n    }\r\n\r\n}\r\nfunction appendTimer(name, time, onOrOff) {\r\n    var uniqmilli = new Date().getUTCMilliseconds()\r\n    var appendClass = '.tasks';\r\n    var appendHtml = \"<div id='\" + uniqmilli + \"' class='col-md-12 task'>\" +\r\n        \" <div class='col-md-8'> <h2>\" + name + \":\" + onOrOff + \"</h2> </div> \" +\r\n        \"<div class='col-md-4'> <h2>\" + time + \"</h2> </div> \" +\r\n        \"</div>\";\r\n    console.log(appendHtml);\r\n    $(appendClass).append(appendHtml);\r\n\r\n    return '#' + uniqmilli;\r\n\r\n}\r\n\r\nfunction setTimerCountdown(name, time, onOrOff, pin) {\r\n    var timerDiv = appendTimer(name, time, onOrOff);\r\n    var timerTime = time;\r\n    var intervalTime = 1000;\r\n    var now = new Date();\r\n    var nowValidFormat = now.toLocaleTimeString('nl-NL', {hour: '2-digit', minute: '2-digit'});\r\n\r\n    var interval = setInterval(function () {\r\n        now = new Date();\r\n        nowValidFormat = now.toLocaleTimeString('nl-NL', {hour: '2-digit', minute: '2-digit'});\r\n\r\n        if (nowValidFormat == timerTime) {\r\n            console.log(\"timer gaat nu af\");\r\n            toggleContact(pin,onOrOff);\r\n            toggleDot(pin,onOrOff);\r\n            $(timerDiv).remove();\r\n            clearInterval(interval);\r\n\r\n        }\r\n    }, intervalTime);\r\n}\r\n\r\nvar commands = {\r\n    // annyang will capture anything after a splat (*) and pass it to the function.\r\n    // e.g. saying \"Show me Batman and Robin\" is the same as calling showFlickr('Batman and Robin');\r\n    //'show me *tag': showFlickr,\r\n    'laat iets zien': showSomething,\r\n    '(zet) (set) (do) (doe) lamp :number aan': turnLightOn,\r\n    '(zet) (set) (do) (doe) lamp :number uit': turnLightOff,\r\n    '(zet) (set) (do) (doe) alles aan': turnAllOn,\r\n    '(zet) (set) (do) (doe) alles uit': turnAllOff,\r\n    '(zet) (set) (do) (doe) scherm uit': terminalOff,\r\n    '(zet) (set) (do) (doe) scherm aan': terminalOn,\r\n    /*    '(zet) (set) (do) (doe) test aan': function(){\r\n     test('lul');\r\n     }*/\r\n\r\n    /*    '(zet) (set) (do) (doe) waaier aan (om) (vanaf) :hour uur (en) :minutes (minuten) (*trash)': timerOnHM,\r\n     '(zet) (set) (do) (doe) waaier aan om :time (*trash)': timerOnFullTime,\r\n     '(zet) (set) (do) (doe) waaier aan vanaf :time (*trash)': timerOnFullTime*/\r\n\r\n    /*'(zet) (set) (do) (doe) waaier :day aan (om) (vanaf) :hour uur :minutes' : timerOn*/\r\n\r\n    // A named variable is a one word variable, that can fit anywhere in your command.\r\n    // e.g. saying \"calculate October stats\" will call calculateStats('October');\r\n    // 'calculate :month stats': calculateStats,\r\n\r\n    // By defining a part of the following command as optional, annyang will respond to both:\r\n    // \"say hello to my little friend\" as well as \"say hello friend\"\r\n    //'say hello (to my little) friend': greeting\r\n};\r\n\r\nannyang.setLanguage('nl-NL');\r\nannyang.addCommands(commands);\r\nannyang.addCallback('start', onStart);\r\nannyang.addCallback('resultMatch', function (userSaid, commandText, phrases) {\r\n    userSaidGlobal = userSaid;\r\n    console.log(userSaid); // sample output: 'hello'\r\n    $(resultClass).html(userSaid);\r\n    console.log(commandText); // sample output: 'hello (there)'\r\n    console.log(phrases); // sample output: ['hello', 'halo', 'yellow', 'polo', 'hello kitty']\r\n});\r\nannyang.debug();\r\nannyang.start();\r\n\r\n"]}